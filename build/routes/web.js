"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const AuthController_1 = __importDefault(require("../app/controllers/AuthController"));
const auth_1 = __importDefault(require("../app/middlewares/auth"));
const admin_1 = __importDefault(require("../app/middlewares/admin"));
const HomeController_1 = __importDefault(require("../app/controllers/HomeController"));
const AssetController_1 = __importDefault(require("../app/controllers/AssetController"));
const ProductController_1 = __importDefault(require("../app/controllers/ProductController"));
const ContentController_1 = __importDefault(require("../app/controllers/ContentController"));
const S3Controller_1 = __importDefault(require("../app/controllers/S3Controller"));
const hyper_express_1 = __importDefault(require("hyper-express"));
const Route = new hyper_express_1.default.Router();
Route.get("/", HomeController_1.default.index);
Route.get("/login", AuthController_1.default.loginPage);
Route.post("/login", AuthController_1.default.processLogin);
Route.get("/register", AuthController_1.default.registerPage);
Route.post("/register", AuthController_1.default.processRegister);
Route.post("/logout", AuthController_1.default.logout);
Route.get("/google/redirect", AuthController_1.default.redirect);
Route.get("/google/callback", AuthController_1.default.googleCallback);
Route.get("/forgot-password", AuthController_1.default.forgotPasswordPage);
Route.post("/forgot-password", AuthController_1.default.sendResetPassword);
Route.get("/reset-password/:id", AuthController_1.default.resetPasswordPage);
Route.post("/reset-password", AuthController_1.default.resetPassword);
Route.get("/home", [auth_1.default], AuthController_1.default.homePage);
Route.get("/profile", [auth_1.default], AuthController_1.default.profilePage);
Route.post("/change-profile", [auth_1.default], AuthController_1.default.changeProfile);
Route.post("/change-password", [auth_1.default], AuthController_1.default.changePassword);
Route.delete("/users", [auth_1.default], AuthController_1.default.deleteUsers);
Route.get("/admin/products", [admin_1.default], ProductController_1.default.index);
Route.get("/admin/products/create", [admin_1.default], ProductController_1.default.create);
Route.post("/admin/products", [admin_1.default], ProductController_1.default.store);
Route.get("/admin/products/:id", [admin_1.default], ProductController_1.default.show);
Route.get("/admin/products/:id/edit", [admin_1.default], ProductController_1.default.edit);
Route.put("/admin/products/:id", [admin_1.default], ProductController_1.default.update);
Route.delete("/admin/products/:id", [admin_1.default], ProductController_1.default.destroy);
Route.get("/api/products/search", [auth_1.default], ProductController_1.default.search);
Route.get("/api/products/:id", [auth_1.default], ProductController_1.default.getById);
Route.get("/contents", [auth_1.default], ContentController_1.default.index);
Route.get("/contents/create", [auth_1.default], ContentController_1.default.create);
Route.post("/contents", [auth_1.default], ContentController_1.default.store);
Route.get("/contents/:id", [auth_1.default], ContentController_1.default.show);
Route.get("/contents/:id/edit", [auth_1.default], ContentController_1.default.edit);
Route.put("/contents/:id", [auth_1.default], ContentController_1.default.update);
Route.delete("/contents/:id", [auth_1.default], ContentController_1.default.destroy);
Route.get("/contents/:id/download", [auth_1.default], ContentController_1.default.download);
Route.post("/contents/:id/share", [auth_1.default], ContentController_1.default.share);
Route.get("/shared/:shareId", ContentController_1.default.getSharedContent);
Route.post("/api/s3/signed-url", [auth_1.default], S3Controller_1.default.getSignedUrl);
Route.post("/api/s3/product-image-url", [auth_1.default], S3Controller_1.default.getProductImageUrl);
Route.get("/api/s3/public-url/:fileKey", [auth_1.default], S3Controller_1.default.getPublicUrl);
Route.get("/api/s3/health", [auth_1.default], S3Controller_1.default.health);
Route.get("/product-demo", [auth_1.default], (request, response) => {
    return response.inertia("product-demo");
});
Route.get("/assets/:file", AssetController_1.default.distFolder);
Route.get("/*", AssetController_1.default.publicFolder);
exports.default = Route;
//# sourceMappingURL=web.js.map